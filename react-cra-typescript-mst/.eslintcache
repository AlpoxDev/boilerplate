[{"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/index.tsx":"1","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/index.ts":"2","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/post.ts":"3","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/user.ts":"4","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/index.ts":"5","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/user.ts":"6","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/routers/main.tsx":"7","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/pages/main/PostList.tsx":"8","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/routers/index.tsx":"9","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/axios/index.ts":"10","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/post.ts":"11","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/repository/post.ts":"12","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/asyncModel.ts":"13","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/repository/index.ts":"14","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/pages/main/PostDetail.tsx":"15"},{"size":225,"mtime":1611989964860,"results":"16","hashOfConfig":"17"},{"size":623,"mtime":1612031823602,"results":"18","hashOfConfig":"17"},{"size":462,"mtime":1612112686846,"results":"19","hashOfConfig":"17"},{"size":209,"mtime":1612032266139,"results":"20","hashOfConfig":"17"},{"size":78,"mtime":1612082430448,"results":"21","hashOfConfig":"17"},{"size":594,"mtime":1612031749256,"results":"22","hashOfConfig":"17"},{"size":409,"mtime":1612115342058,"results":"23","hashOfConfig":"17"},{"size":1414,"mtime":1612117075634,"results":"24","hashOfConfig":"17"},{"size":515,"mtime":1611991827123,"results":"25","hashOfConfig":"17"},{"size":2845,"mtime":1612114014159,"results":"26","hashOfConfig":"17"},{"size":1389,"mtime":1612117252285,"results":"27","hashOfConfig":"17"},{"size":686,"mtime":1612082576669,"results":"28","hashOfConfig":"17"},{"size":3774,"mtime":1612117007100,"results":"29","hashOfConfig":"17"},{"size":24,"mtime":1612081294298,"results":"30","hashOfConfig":"17"},{"size":830,"mtime":1612116914561,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"u3z8zl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/index.tsx",[],[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/index.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/post.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/user.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/index.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/user.ts",["64"],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/routers/main.tsx",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/pages/main/PostList.tsx",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/routers/index.tsx",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/axios/index.ts",["65","66","67","68"],"import axios from 'axios';\nimport queryString from 'query-string';\n\nconst ENDPOINT = 'https://jsonplaceholder.typicode.com';\nconst instance = axios.create({});\n\nexport type Header = { [type: string]: string };\nexport type Query = { [type: string]: any };\nexport type Params = { [type: string]: any };\nexport type ResponseData = { [type: string]: any } | any;\n\nexport enum RequestMethod {\n    get = 'GET',\n    post = 'POST',\n    delete = 'DELETE',\n    patch = 'PATCH',\n    put = 'PUT',\n}\n\nexport type RequestProps = {\n    method?: RequestMethod;\n    url: string;\n    headers?: Header;\n    query?: Query;\n    params?: Params;\n};\n\nexport type Response = {\n    status: number;\n    data: ResponseData | null;\n};\nexport type Error = Response;\n\nexport const onParseQuery = (query?: Query): string => {\n    if (!query) return '';\n\n    return queryString.stringify(query);\n};\n\nexport const onRequest = async (props: RequestProps): Promise<Response> => {\n    const { method } = props;\n    props = { ...props, url: ENDPOINT + props.url };\n\n    console.log('onRequest', props);\n\n    try {\n        switch (method) {\n            case RequestMethod.get:\n                return await onRequestGet(props);\n            case RequestMethod.post:\n                return await onRequestPost(props);\n            case RequestMethod.delete:\n                return await onRequestDelete(props);\n            case RequestMethod.patch:\n                return await onRequestPatch(props);\n            case RequestMethod.put:\n                return await onRequestPut(props);\n            default:\n                return await onRequestGet(props);\n        }\n    } catch (error) {\n        return { status: 500 } as Response;\n    }\n};\n\nexport const onRequestGet = async (props: RequestProps): Promise<Response> => {\n    const { url, headers, query } = props;\n\n    return await instance.get(url + onParseQuery(query), {\n        headers,\n    });\n};\n\nexport const onRequestPost = async (props: RequestProps): Promise<Response> => {\n    const { url, headers, query, params } = props;\n\n    return await instance.post(url + onParseQuery(query), params, {\n        headers,\n    });\n};\n\nexport const onRequestDelete = async (props: RequestProps): Promise<Response> => {\n    const { url, headers, query, params } = props;\n\n    return await instance.delete(url + onParseQuery(query), {\n        headers,\n        params,\n    });\n};\n\nexport const onRequestPatch = async (props: RequestProps): Promise<Response> => {\n    const { url, headers, query, params } = props;\n\n    return await instance.patch(url + onParseQuery(query), params, {\n        headers,\n    });\n};\n\nexport const onRequestPut = async (props: RequestProps): Promise<Response> => {\n    const { url, headers, query, params } = props;\n\n    return await instance.put(url + onParseQuery(query), params, {\n        headers,\n    });\n};\n","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/post.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/repository/post.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/asyncModel.ts",["69","70","71","72","73","74","75","76","77","78"],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/repository/index.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/pages/main/PostDetail.tsx",["79","80"],{"ruleId":"81","severity":1,"message":"82","line":9,"column":13,"nodeType":"83","messageId":"84","endLine":9,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":8,"column":39,"nodeType":"87","messageId":"88","endLine":8,"endColumn":42,"suggestions":"89"},{"ruleId":"85","severity":1,"message":"86","line":9,"column":40,"nodeType":"87","messageId":"88","endLine":9,"endColumn":43,"suggestions":"90"},{"ruleId":"85","severity":1,"message":"86","line":10,"column":46,"nodeType":"87","messageId":"88","endLine":10,"endColumn":49,"suggestions":"91"},{"ruleId":"85","severity":1,"message":"86","line":10,"column":54,"nodeType":"87","messageId":"88","endLine":10,"endColumn":57,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"86","line":38,"column":33,"nodeType":"87","messageId":"88","endLine":38,"endColumn":36,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"86","line":38,"column":39,"nodeType":"87","messageId":"88","endLine":38,"endColumn":42,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"86","line":52,"column":32,"nodeType":"87","messageId":"88","endLine":52,"endColumn":35,"suggestions":"95"},{"ruleId":"81","severity":1,"message":"82","line":53,"column":17,"nodeType":"83","messageId":"84","endLine":53,"endColumn":21},{"ruleId":"85","severity":1,"message":"86","line":78,"column":34,"nodeType":"87","messageId":"88","endLine":78,"endColumn":37,"suggestions":"96"},{"ruleId":"85","severity":1,"message":"86","line":78,"column":40,"nodeType":"87","messageId":"88","endLine":78,"endColumn":43,"suggestions":"97"},{"ruleId":"85","severity":1,"message":"86","line":92,"column":33,"nodeType":"87","messageId":"88","endLine":92,"endColumn":36,"suggestions":"98"},{"ruleId":"81","severity":1,"message":"82","line":93,"column":17,"nodeType":"83","messageId":"84","endLine":93,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":115,"column":8,"nodeType":"101","messageId":"102","endLine":115,"endColumn":78},{"ruleId":"99","severity":1,"message":"100","line":123,"column":8,"nodeType":"101","messageId":"102","endLine":123,"endColumn":79},{"ruleId":"81","severity":1,"message":"103","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":15},{"ruleId":"85","severity":1,"message":"86","line":11,"column":27,"nodeType":"87","messageId":"88","endLine":11,"endColumn":30,"suggestions":"104"},"@typescript-eslint/no-unused-vars","'self' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["105","106"],["107","108"],["109","110"],["111","112"],["113","114"],["115","116"],["117","118"],["119","120"],["121","122"],["123","124"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'IPost' is defined but never used.",["125","126"],{"messageId":"127","fix":"128","desc":"129"},{"messageId":"130","fix":"131","desc":"132"},{"messageId":"127","fix":"133","desc":"129"},{"messageId":"130","fix":"134","desc":"132"},{"messageId":"127","fix":"135","desc":"129"},{"messageId":"130","fix":"136","desc":"132"},{"messageId":"127","fix":"137","desc":"129"},{"messageId":"130","fix":"138","desc":"132"},{"messageId":"127","fix":"139","desc":"129"},{"messageId":"130","fix":"140","desc":"132"},{"messageId":"127","fix":"141","desc":"129"},{"messageId":"130","fix":"142","desc":"132"},{"messageId":"127","fix":"143","desc":"129"},{"messageId":"130","fix":"144","desc":"132"},{"messageId":"127","fix":"145","desc":"129"},{"messageId":"130","fix":"146","desc":"132"},{"messageId":"127","fix":"147","desc":"129"},{"messageId":"130","fix":"148","desc":"132"},{"messageId":"127","fix":"149","desc":"129"},{"messageId":"130","fix":"150","desc":"132"},{"messageId":"127","fix":"151","desc":"129"},{"messageId":"130","fix":"152","desc":"132"},"suggestUnknown",{"range":"153","text":"154"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"153","text":"155"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"156","text":"154"},{"range":"156","text":"155"},{"range":"157","text":"154"},{"range":"157","text":"155"},{"range":"158","text":"154"},{"range":"158","text":"155"},{"range":"159","text":"154"},{"range":"159","text":"155"},{"range":"160","text":"154"},{"range":"160","text":"155"},{"range":"161","text":"154"},{"range":"161","text":"155"},{"range":"162","text":"154"},{"range":"162","text":"155"},{"range":"163","text":"154"},{"range":"163","text":"155"},{"range":"164","text":"154"},{"range":"164","text":"155"},{"range":"165","text":"154"},{"range":"165","text":"155"},[248,251],"unknown","never",[294,297],[346,349],[354,357],[972,975],[978,981],[1460,1463],[2206,2209],[2212,2215],[2691,2694],[350,353]]