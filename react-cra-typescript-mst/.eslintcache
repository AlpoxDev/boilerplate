[{"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/index.tsx":"1","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/index.ts":"2","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/post.ts":"3","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/user.ts":"4","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/index.ts":"5","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/user.ts":"6","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/routers/main.tsx":"7","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/pages/main/PostList.tsx":"8","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/routers/index.tsx":"9","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/axios/index.ts":"10","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/post.ts":"11","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/repository/post.ts":"12","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/asyncModel.ts":"13","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/repository/index.ts":"14","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/pages/main/PostDetail.tsx":"15","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/pages/main/index.tsx":"16"},{"size":225,"mtime":1611989964860,"results":"17","hashOfConfig":"18"},{"size":623,"mtime":1612031823602,"results":"19","hashOfConfig":"18"},{"size":462,"mtime":1612112686846,"results":"20","hashOfConfig":"18"},{"size":209,"mtime":1612032266139,"results":"21","hashOfConfig":"18"},{"size":78,"mtime":1612082430448,"results":"22","hashOfConfig":"18"},{"size":594,"mtime":1612031749256,"results":"23","hashOfConfig":"18"},{"size":409,"mtime":1612115342058,"results":"24","hashOfConfig":"18"},{"size":1414,"mtime":1612117075634,"results":"25","hashOfConfig":"18"},{"size":515,"mtime":1611991827123,"results":"26","hashOfConfig":"18"},{"size":2845,"mtime":1612114014159,"results":"27","hashOfConfig":"18"},{"size":1389,"mtime":1612117252285,"results":"28","hashOfConfig":"18"},{"size":686,"mtime":1612082576669,"results":"29","hashOfConfig":"18"},{"size":3774,"mtime":1612117007100,"results":"30","hashOfConfig":"18"},{"size":24,"mtime":1612081294298,"results":"31","hashOfConfig":"18"},{"size":790,"mtime":1612117783957,"results":"32","hashOfConfig":"18"},{"size":76,"mtime":1612115315339,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"u3z8zl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/index.tsx",[],[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/index.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/post.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/user.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/index.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/user.ts",["69"],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/routers/main.tsx",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/pages/main/PostList.tsx",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/routers/index.tsx",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/axios/index.ts",["70","71","72","73"],"import axios from 'axios';\nimport queryString from 'query-string';\n\nconst ENDPOINT = 'https://jsonplaceholder.typicode.com';\nconst instance = axios.create({});\n\nexport type Header = { [type: string]: string };\nexport type Query = { [type: string]: any };\nexport type Params = { [type: string]: any };\nexport type ResponseData = { [type: string]: any } | any;\n\nexport enum RequestMethod {\n    get = 'GET',\n    post = 'POST',\n    delete = 'DELETE',\n    patch = 'PATCH',\n    put = 'PUT',\n}\n\nexport type RequestProps = {\n    method?: RequestMethod;\n    url: string;\n    headers?: Header;\n    query?: Query;\n    params?: Params;\n};\n\nexport type Response = {\n    status: number;\n    data: ResponseData | null;\n};\nexport type Error = Response;\n\nexport const onParseQuery = (query?: Query): string => {\n    if (!query) return '';\n\n    return queryString.stringify(query);\n};\n\nexport const onRequest = async (props: RequestProps): Promise<Response> => {\n    const { method } = props;\n    props = { ...props, url: ENDPOINT + props.url };\n\n    console.log('onRequest', props);\n\n    try {\n        switch (method) {\n            case RequestMethod.get:\n                return await onRequestGet(props);\n            case RequestMethod.post:\n                return await onRequestPost(props);\n            case RequestMethod.delete:\n                return await onRequestDelete(props);\n            case RequestMethod.patch:\n                return await onRequestPatch(props);\n            case RequestMethod.put:\n                return await onRequestPut(props);\n            default:\n                return await onRequestGet(props);\n        }\n    } catch (error) {\n        return { status: 500 } as Response;\n    }\n};\n\nexport const onRequestGet = async (props: RequestProps): Promise<Response> => {\n    const { url, headers, query } = props;\n\n    return await instance.get(url + onParseQuery(query), {\n        headers,\n    });\n};\n\nexport const onRequestPost = async (props: RequestProps): Promise<Response> => {\n    const { url, headers, query, params } = props;\n\n    return await instance.post(url + onParseQuery(query), params, {\n        headers,\n    });\n};\n\nexport const onRequestDelete = async (props: RequestProps): Promise<Response> => {\n    const { url, headers, query, params } = props;\n\n    return await instance.delete(url + onParseQuery(query), {\n        headers,\n        params,\n    });\n};\n\nexport const onRequestPatch = async (props: RequestProps): Promise<Response> => {\n    const { url, headers, query, params } = props;\n\n    return await instance.patch(url + onParseQuery(query), params, {\n        headers,\n    });\n};\n\nexport const onRequestPut = async (props: RequestProps): Promise<Response> => {\n    const { url, headers, query, params } = props;\n\n    return await instance.put(url + onParseQuery(query), params, {\n        headers,\n    });\n};\n","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/stores/post.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/repository/post.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/common/models/asyncModel.ts",["74","75","76","77","78","79","80","81","82","83"],"import {\n    types,\n    IAnyModelType,\n    IMaybeNull,\n    ISimpleType,\n    IOptionalIType,\n    UnionStringArray,\n    ValidOptionalValues,\n    IModelType,\n    IArrayType,\n} from 'mobx-state-tree';\nimport { Error } from 'common/axios';\n\nexport enum AsyncStatus {\n    default = 'default',\n    pending = 'pending',\n    ready = 'ready',\n    error = 'error',\n}\n\nexport type AsyncModelType<T extends IAnyModelType, E extends IAnyModelType> = {\n    status: IOptionalIType<ISimpleType<UnionStringArray<AsyncStatus[]>>, ValidOptionalValues>;\n    data: IMaybeNull<T>;\n    error: IMaybeNull<E>;\n};\n\nexport type AsyncModelTypes<T extends IAnyModelType, E extends IAnyModelType> = {\n    status: IOptionalIType<ISimpleType<UnionStringArray<AsyncStatus[]>>, ValidOptionalValues>;\n    data: IArrayType<T>;\n    error: IMaybeNull<E>;\n};\n\nconst ErrorModel = types.model<Error>();\n\nfunction AsyncModel<T extends IAnyModelType>(\n    name: string,\n    model: T,\n): IModelType<AsyncModelType<T, any>, any> {\n    return types\n        .model(name, {\n            status: types.optional(\n                types.enumeration('status', [\n                    AsyncStatus.default,\n                    AsyncStatus.pending,\n                    AsyncStatus.ready,\n                    AsyncStatus.error,\n                ]),\n                AsyncStatus.default,\n            ),\n            data: types.maybeNull(model),\n            error: types.maybeNull(ErrorModel),\n        } as AsyncModelType<T, any>)\n        .views((self) => ({}))\n        .actions((self) => ({\n            onDefault() {\n                self.status = AsyncStatus.default;\n                self.error = null;\n            },\n            onPending() {\n                self.status = AsyncStatus.pending;\n                self.error = null;\n            },\n            onReady(data) {\n                self.status = AsyncStatus.ready;\n                self.error = null;\n                self.data = data;\n            },\n            onError(error: Error) {\n                self.status = AsyncStatus.error;\n                self.error = error;\n            },\n        }));\n}\n\nfunction AsyncModels<T extends IAnyModelType>(\n    name: string,\n    model: T,\n): IModelType<AsyncModelTypes<T, any>, any> {\n    return types\n        .model(name, {\n            status: types.optional(\n                types.enumeration('status', [\n                    AsyncStatus.default,\n                    AsyncStatus.pending,\n                    AsyncStatus.ready,\n                    AsyncStatus.error,\n                ]),\n                AsyncStatus.default,\n            ),\n            data: types.array(model),\n            error: types.maybeNull(ErrorModel),\n        } as AsyncModelTypes<T, any>)\n        .views((self) => ({}))\n        .actions((self) => ({\n            onDefault() {\n                self.status = AsyncStatus.default;\n                self.error = null;\n            },\n            onPending() {\n                self.status = AsyncStatus.pending;\n                self.error = null;\n            },\n            onReady(data) {\n                self.status = AsyncStatus.ready;\n                self.error = null;\n                self.data = data;\n            },\n            onError(error: Error) {\n                self.status = AsyncStatus.error;\n                self.error = error;\n            },\n        }));\n}\n\nexport function onAsyncModel<T extends IAnyModelType>(name: string, model: T) {\n    return types.optional(AsyncModel<T>(name, model), {\n        status: AsyncStatus.default,\n        data: null,\n        error: null,\n    });\n}\n\nexport function onAsyncModels<T extends IAnyModelType>(name: string, model: T) {\n    return types.optional(AsyncModels<T>(name, model), {\n        status: AsyncStatus.default,\n        data: [],\n        error: null,\n    });\n}\n","/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/repository/index.ts",[],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/pages/main/PostDetail.tsx",["84"],"/Users/alpox/Desktop/dev/@projects/boilerplate/react-cra-typescript-mst/src/pages/main/index.tsx",[],{"ruleId":"85","severity":1,"message":"86","line":9,"column":13,"nodeType":"87","messageId":"88","endLine":9,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":8,"column":39,"nodeType":"91","messageId":"92","endLine":8,"endColumn":42,"suggestions":"93"},{"ruleId":"89","severity":1,"message":"90","line":9,"column":40,"nodeType":"91","messageId":"92","endLine":9,"endColumn":43,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"90","line":10,"column":46,"nodeType":"91","messageId":"92","endLine":10,"endColumn":49,"suggestions":"95"},{"ruleId":"89","severity":1,"message":"90","line":10,"column":54,"nodeType":"91","messageId":"92","endLine":10,"endColumn":57,"suggestions":"96"},{"ruleId":"89","severity":1,"message":"90","line":38,"column":33,"nodeType":"91","messageId":"92","endLine":38,"endColumn":36,"suggestions":"97"},{"ruleId":"89","severity":1,"message":"90","line":38,"column":39,"nodeType":"91","messageId":"92","endLine":38,"endColumn":42,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"90","line":52,"column":32,"nodeType":"91","messageId":"92","endLine":52,"endColumn":35,"suggestions":"99"},{"ruleId":"85","severity":1,"message":"86","line":53,"column":17,"nodeType":"87","messageId":"88","endLine":53,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":78,"column":34,"nodeType":"91","messageId":"92","endLine":78,"endColumn":37,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"90","line":78,"column":40,"nodeType":"91","messageId":"92","endLine":78,"endColumn":43,"suggestions":"101"},{"ruleId":"89","severity":1,"message":"90","line":92,"column":33,"nodeType":"91","messageId":"92","endLine":92,"endColumn":36,"suggestions":"102"},{"ruleId":"85","severity":1,"message":"86","line":93,"column":17,"nodeType":"87","messageId":"88","endLine":93,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":115,"column":8,"nodeType":"105","messageId":"106","endLine":115,"endColumn":78},{"ruleId":"103","severity":1,"message":"104","line":123,"column":8,"nodeType":"105","messageId":"106","endLine":123,"endColumn":79},{"ruleId":"89","severity":1,"message":"90","line":9,"column":19,"nodeType":"91","messageId":"92","endLine":9,"endColumn":22,"suggestions":"107"},"@typescript-eslint/no-unused-vars","'self' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["108","109"],["110","111"],["112","113"],["114","115"],["116","117"],["118","119"],["120","121"],["122","123"],["124","125"],["126","127"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType",["128","129"],{"messageId":"130","fix":"131","desc":"132"},{"messageId":"133","fix":"134","desc":"135"},{"messageId":"130","fix":"136","desc":"132"},{"messageId":"133","fix":"137","desc":"135"},{"messageId":"130","fix":"138","desc":"132"},{"messageId":"133","fix":"139","desc":"135"},{"messageId":"130","fix":"140","desc":"132"},{"messageId":"133","fix":"141","desc":"135"},{"messageId":"130","fix":"142","desc":"132"},{"messageId":"133","fix":"143","desc":"135"},{"messageId":"130","fix":"144","desc":"132"},{"messageId":"133","fix":"145","desc":"135"},{"messageId":"130","fix":"146","desc":"132"},{"messageId":"133","fix":"147","desc":"135"},{"messageId":"130","fix":"148","desc":"132"},{"messageId":"133","fix":"149","desc":"135"},{"messageId":"130","fix":"150","desc":"132"},{"messageId":"133","fix":"151","desc":"135"},{"messageId":"130","fix":"152","desc":"132"},{"messageId":"133","fix":"153","desc":"135"},{"messageId":"130","fix":"154","desc":"132"},{"messageId":"133","fix":"155","desc":"135"},"suggestUnknown",{"range":"156","text":"157"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"156","text":"158"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"159","text":"157"},{"range":"159","text":"158"},{"range":"160","text":"157"},{"range":"160","text":"158"},{"range":"161","text":"157"},{"range":"161","text":"158"},{"range":"162","text":"157"},{"range":"162","text":"158"},{"range":"163","text":"157"},{"range":"163","text":"158"},{"range":"164","text":"157"},{"range":"164","text":"158"},{"range":"165","text":"157"},{"range":"165","text":"158"},{"range":"166","text":"157"},{"range":"166","text":"158"},{"range":"167","text":"157"},{"range":"167","text":"158"},{"range":"168","text":"157"},{"range":"168","text":"158"},[248,251],"unknown","never",[294,297],[346,349],[354,357],[972,975],[978,981],[1460,1463],[2206,2209],[2212,2215],[2691,2694],[299,302]]